name: GoReleaser

on:
  push:
    tags:
      - "v*"

jobs:
  goreleaser:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      - name: Install MinIO Client
        run: |
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc

      - name: Configure MinIO Client
        run: |
          ./mc alias set myminio ${{ secrets.MINIO_ENDPOINT }} ${{ secrets.MINIO_ACCESS_KEY }} ${{ secrets.MINIO_SECRET_KEY }}

      - name: upload to minio
        run: |
          mkdir upload
          cp dist/tagger_darwin_arm64_v8.0/tagger upload/tagger_darwin_arm64
          cp dist/tagger_darwin_amd64_v1/tagger upload/tagger_darwin_amd64
          cp dist/tagger_windows_amd64_v1/tagger.exe upload/tagger_windows_amd64.exe
          cp dist/tagger_linux_arm64_v8.0/tagger upload/tagger_linux_arm64
          cp dist/tagger_windows_arm64_v8.0/tagger.exe upload/tagger_windows_arm64.exe
          cp dist/tagger_linux_amd64_v1/tagger upload/tagger_linux_amd64
          cp cdn_script/tagger.sh upload/tagger.sh
          cp cdn_script/tagger.ps1 upload/tagger.ps1
          ./mc cp --recursive upload/ myminio/${{ secrets.MINIO_BUCKET }}/tagger/
      - name: 通知
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"source":"github-ci:tagger","message":"流水线运行完毕。\n版本: ${{ github.ref_name }}" }' ${{ secrets.WEBHOOK_URL }}
